// This font is modified to include special characteres required to print French words: é, è, ê, à, î etc.
// It is based on FreeMonoBold9pt7b provided with Adafruit_GFX library.
// This is a 7bits font with 128 glyphs only which is insufficient to hold all special characters required.
// Glyphs of some selected characters like <, $ or * have been replaced by required symbols like é.
// Glyph editing done using https://tchapi.github.io/Adafruit-GFX-Font-Customiser/
// To use this font as intented it is required to substitute characters as follows:
//ô	>	#
//É	>	$
//û	>	*
//ç	>	+
//î	>	<
//à	>	{
//ê	>	|
//é	>	}
//è	>	~
//ë	>	>
//ù	>	^
//ï	>	_
//Ê	>	'=
//â	>	\

const uint8_t FreeMonoBold9pt7bBitmaps[] PROGMEM = {
  0xFF, 0xFF, 0xD2, 0x1F, 0x80, 0xEC, 0x89, 0x12, 0x24, 0x40, 0x1C, 0x1F,
  0x18, 0xD8, 0x33, 0xE3, 0xFB, 0x8F, 0x83, 0xC1, 0xF1, 0xDF, 0xC7, 0xC0,
  0x1E, 0x3C, 0x00, 0x1F, 0xFF, 0xFB, 0x0D, 0xB6, 0xF8, 0x7C, 0x36, 0xD8,
  0x7F, 0xFF, 0xF8, 0x00, 0x61, 0x22, 0x44, 0x86, 0x67, 0x37, 0x11, 0x22,
  0x4C, 0x70, 0x3C, 0x7E, 0x60, 0x60, 0x30, 0x7B, 0xDF, 0xCE, 0xFF, 0x7F,
  0xC9, 0x24, 0x37, 0x66, 0xCC, 0xCC, 0xCC, 0x66, 0x31, 0xCE, 0x66, 0x33,
  0x33, 0x33, 0x66, 0xC8, 0x00, 0x0E, 0x0F, 0x8C, 0x60, 0x07, 0x3B, 0x9C,
  0xC6, 0x63, 0x31, 0x98, 0xCF, 0xF3, 0xF8, 0x00, 0x00, 0x3F, 0x7F, 0xE3,
  0xC3, 0xC0, 0xE1, 0x7F, 0x3E, 0x0C, 0x06, 0x1E, 0x1E, 0x00, 0x6B, 0x48,
  0xFF, 0xFF, 0xC0, 0xF0, 0x02, 0x0C, 0x18, 0x60, 0xC3, 0x06, 0x0C, 0x30,
  0x61, 0x83, 0x0C, 0x18, 0x20, 0x00, 0x38, 0xFB, 0xBE, 0x3C, 0x78, 0xF1,
  0xE3, 0xC7, 0xDD, 0xF1, 0xC0, 0x38, 0xF3, 0x60, 0xC1, 0x83, 0x06, 0x0C,
  0x18, 0xFD, 0xF8, 0x3C, 0xFE, 0xC7, 0x03, 0x03, 0x06, 0x0C, 0x18, 0x70,
  0xE3, 0xFF, 0xFF, 0x7C, 0xFE, 0x03, 0x03, 0x03, 0x1E, 0x1E, 0x07, 0x03,
  0x03, 0xFE, 0x7C, 0x1C, 0x38, 0xB1, 0x64, 0xD9, 0xBF, 0xFF, 0x3E, 0x7C,
  0x7E, 0x3F, 0x18, 0x0F, 0xC7, 0xF3, 0x1C, 0x06, 0x03, 0xC3, 0xFF, 0x9F,
  0x80, 0x0F, 0x3F, 0x30, 0x60, 0x60, 0xDC, 0xFE, 0xE3, 0xC3, 0x63, 0x7E,
  0x3C, 0xFF, 0xFF, 0xC3, 0x03, 0x06, 0x06, 0x06, 0x0C, 0x0C, 0x0C, 0x18,
  0x38, 0xFB, 0x1E, 0x3C, 0x6F, 0x9F, 0x63, 0xC7, 0x8F, 0xF1, 0xC0, 0x3C,
  0x7E, 0xE6, 0xC3, 0xC3, 0xE7, 0x7F, 0x3B, 0x06, 0x0E, 0xFC, 0xF0, 0xF0,
  0x0F, 0x6C, 0x00, 0x1A, 0xD2, 0x00, 0x00, 0x38, 0x7C, 0xC6, 0x00, 0x78,
  0x78, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x1C, 0x1B, 0x00, 0x1F, 0xFF,
  0xFB, 0x0D, 0xB6, 0xF8, 0x7C, 0x36, 0xD8, 0x7F, 0xFF, 0xF8, 0x00, 0x00,
  0x00, 0x18, 0xCC, 0x60, 0x01, 0xF1, 0xFD, 0x87, 0xFF, 0xFF, 0xF0, 0x0F,
  0xF3, 0xF0, 0x00, 0x7C, 0xFE, 0xC7, 0x03, 0x0E, 0x1C, 0x00, 0x00, 0x00,
  0x30, 0x30, 0x1E, 0x1F, 0x1C, 0xDC, 0x6C, 0x76, 0x7B, 0x6D, 0xB6, 0xDB,
  0x6F, 0xF3, 0xFC, 0x06, 0x33, 0xF8, 0x78, 0x3C, 0x07, 0xC0, 0x38, 0x05,
  0x81, 0xB0, 0x36, 0x0F, 0xE1, 0xFC, 0x71, 0xDF, 0x7F, 0xEF, 0x80, 0xFF,
  0x3F, 0xE6, 0x19, 0x86, 0x7F, 0x1F, 0xE6, 0x1D, 0x83, 0x60, 0xFF, 0xFF,
  0xF0, 0x1F, 0xBF, 0xD8, 0xF8, 0x3C, 0x06, 0x03, 0x01, 0x80, 0x61, 0xBF,
  0xC7, 0xC0, 0xFE, 0x3F, 0xE6, 0x19, 0x83, 0x60, 0xD8, 0x36, 0x0D, 0x83,
  0x61, 0xBF, 0xEF, 0xE0, 0xFF, 0xFF, 0xD8, 0x6D, 0xB7, 0xC3, 0xE1, 0xB0,
  0xC3, 0x61, 0xFF, 0xFF, 0xE0, 0xFF, 0xFF, 0xD8, 0x6D, 0xB7, 0xC3, 0xE1,
  0xB0, 0xC0, 0x60, 0x7C, 0x3E, 0x00, 0x1F, 0x9F, 0xE6, 0x1B, 0x06, 0xC0,
  0x30, 0x0C, 0x7F, 0x1F, 0xE1, 0x9F, 0xE3, 0xF0, 0xF7, 0xFB, 0xD8, 0xCC,
  0x66, 0x33, 0xF9, 0xFC, 0xC6, 0x63, 0x7B, 0xFD, 0xE0, 0xFF, 0xF3, 0x0C,
  0x30, 0xC3, 0x0C, 0x33, 0xFF, 0xC0, 0x1F, 0xC7, 0xF0, 0x30, 0x0C, 0x03,
  0x00, 0xCC, 0x33, 0x0C, 0xC7, 0x3F, 0x87, 0xC0, 0xF7, 0xBD, 0xE6, 0x61,
  0xB0, 0x78, 0x1F, 0x06, 0xE1, 0x98, 0x63, 0x3C, 0xFF, 0x3C, 0xFC, 0x7E,
  0x0C, 0x06, 0x03, 0x01, 0x80, 0xC6, 0x63, 0x31, 0xFF, 0xFF, 0xE0, 0xE0,
  0xFE, 0x3D, 0xC7, 0x3D, 0xE7, 0xBC, 0xD7, 0x9B, 0xB3, 0x76, 0x60, 0xDE,
  0x3F, 0xC7, 0x80, 0xE1, 0xFE, 0x3D, 0xE3, 0x3C, 0x66, 0xCC, 0xDD, 0x99,
  0xB3, 0x1E, 0x63, 0xDE, 0x3B, 0xC3, 0x00, 0x1F, 0x07, 0xF1, 0xC7, 0x70,
  0x7C, 0x07, 0x80, 0xF0, 0x1F, 0x07, 0x71, 0xC7, 0xF0, 0x7C, 0x00, 0xFE,
  0x7F, 0x98, 0x6C, 0x36, 0x1B, 0xF9, 0xF8, 0xC0, 0x60, 0x7C, 0x3E, 0x00,
  0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x1F, 0x07, 0x71,
  0xC7, 0xF0, 0x7C, 0x0C, 0x33, 0xFE, 0x7F, 0x80, 0xFC, 0x7F, 0x18, 0xCC,
  0x66, 0x73, 0xF1, 0xF0, 0xCC, 0x63, 0x7D, 0xFE, 0x60, 0x3F, 0xBF, 0xF0,
  0x78, 0x0F, 0x03, 0xF8, 0x3F, 0x83, 0xC3, 0xFF, 0xBF, 0x80, 0xFF, 0xFF,
  0xF6, 0x7B, 0x3D, 0x98, 0xC0, 0x60, 0x30, 0x18, 0x3F, 0x1F, 0x80, 0xF1,
  0xFE, 0x3D, 0x83, 0x30, 0x66, 0x0C, 0xC1, 0x98, 0x33, 0x06, 0x60, 0xC7,
  0xF0, 0x7C, 0x00, 0xFB, 0xFF, 0x7D, 0xC3, 0x18, 0xC3, 0x18, 0x36, 0x06,
  0xC0, 0x50, 0x0E, 0x01, 0xC0, 0x10, 0x00, 0xFB, 0xFE, 0xF6, 0x0D, 0x93,
  0x6E, 0xDB, 0xB7, 0xAD, 0xEE, 0x7B, 0x8E, 0xE3, 0x18, 0xF3, 0xFC, 0xF7,
  0x38, 0xFC, 0x1E, 0x03, 0x01, 0xE0, 0xCC, 0x73, 0xBC, 0xFF, 0x3C, 0xF3,
  0xFC, 0xF7, 0x38, 0xCC, 0x1E, 0x07, 0x80, 0xC0, 0x30, 0x0C, 0x0F, 0xC3,
  0xF0, 0xFE, 0xFE, 0xC6, 0xCC, 0x18, 0x18, 0x30, 0x63, 0xC3, 0xFF, 0xFF,
  0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF, 0x00, 0x0E, 0x0F, 0x8C, 0x60,
  0x03, 0xF1, 0xFC, 0x7E, 0x7F, 0x71, 0xB0, 0xDF, 0xF7, 0xF8, 0x00, 0xFF,
  0x33, 0x33, 0x33, 0x33, 0x33, 0xFF, 0x00, 0x00, 0xC0, 0x0C, 0x00, 0xC0,
  0x0C, 0xE7, 0x1C, 0xE1, 0x8C, 0x31, 0x86, 0x30, 0xC6, 0x1F, 0xE1, 0xFC,
  0x00, 0x00, 0x00, 0x00, 0xC6, 0x18, 0xC0, 0x00, 0x3C, 0x07, 0x80, 0x30,
  0x06, 0x00, 0xC0, 0x18, 0x1F, 0xE3, 0xFC, 0x00, 0x88, 0x80, 0x7E, 0x3F,
  0x8F, 0xCF, 0xEE, 0x36, 0x1B, 0xFE, 0xFF, 0xE0, 0x38, 0x06, 0x01, 0xBC,
  0x7F, 0x9C, 0x76, 0x0D, 0x83, 0x71, 0xFF, 0xEE, 0xF0, 0x3F, 0xBF, 0xF8,
  0x78, 0x3C, 0x07, 0x05, 0xFE, 0x7E, 0x03, 0x80, 0xE0, 0x18, 0xF6, 0x7F,
  0xB8, 0xEC, 0x1B, 0x06, 0xE3, 0x9F, 0xF3, 0xFC, 0x3E, 0x3F, 0xB0, 0xFF,
  0xFF, 0xFE, 0x01, 0xFE, 0x7E, 0x1F, 0x3F, 0x30, 0x7E, 0x7E, 0x30, 0x30,
  0x30, 0x30, 0xFE, 0xFE, 0x3F, 0xBF, 0xF9, 0xD8, 0x6C, 0x37, 0x39, 0xFC,
  0x76, 0x03, 0x01, 0x8F, 0xC7, 0xC0, 0xE0, 0x70, 0x18, 0x0D, 0xC7, 0xF3,
  0x99, 0x8C, 0xC6, 0x63, 0x7B, 0xFD, 0xE0, 0x18, 0x18, 0x00, 0x78, 0x78,
  0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x60, 0x3F, 0xFC, 0x30, 0xC3,
  0x0C, 0x30, 0xC3, 0x0F, 0xFF, 0x80, 0xE0, 0x70, 0x18, 0x0D, 0xE6, 0xF3,
  0xE1, 0xE0, 0xF8, 0x6E, 0x73, 0xF9, 0xE0, 0x78, 0x78, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0xFD, 0x9F, 0xF9, 0x9B, 0x33, 0x66,
  0x6C, 0xCD, 0xBD, 0xFF, 0xBF, 0xEE, 0x7F, 0x98, 0xCC, 0x66, 0x33, 0x1B,
  0xDF, 0xEF, 0x3E, 0x3F, 0xB8, 0xF8, 0x3C, 0x1F, 0x1D, 0xFC, 0x7C, 0xEF,
  0x1F, 0xF9, 0xC3, 0xB0, 0x36, 0x06, 0xE1, 0xDF, 0xF3, 0x78, 0x60, 0x0C,
  0x03, 0xE0, 0x7C, 0x00, 0x1E, 0xEF, 0xFF, 0x87, 0x60, 0x6C, 0x0D, 0xC3,
  0x9F, 0xF0, 0xF6, 0x00, 0xC0, 0x18, 0x0F, 0x81, 0xF0, 0x77, 0xBF, 0xCF,
  0x06, 0x03, 0x01, 0x83, 0xF9, 0xFC, 0x3F, 0xFF, 0xC3, 0xFC, 0x3F, 0xC3,
  0xFF, 0xFC, 0x60, 0x60, 0x60, 0xFE, 0xFE, 0x60, 0x60, 0x60, 0x61, 0x7F,
  0x3E, 0xE7, 0x73, 0x98, 0xCC, 0x66, 0x33, 0x19, 0xFE, 0x7F, 0xFB, 0xFF,
  0x7C, 0xC6, 0x18, 0xC1, 0xB0, 0x36, 0x03, 0x80, 0x70, 0xF1, 0xFE, 0x3D,
  0xBB, 0x37, 0x63, 0xF8, 0x77, 0x0E, 0xE1, 0x8C, 0xF7, 0xFB, 0xCD, 0x83,
  0x83, 0xC3, 0xBB, 0xDF, 0xEF, 0xF3, 0xFC, 0xF6, 0x18, 0xCC, 0x33, 0x07,
  0x81, 0xE0, 0x30, 0x0C, 0x06, 0x0F, 0xC3, 0xF0, 0xFF, 0xFF, 0x30, 0xC3,
  0x0C, 0x7F, 0xFF, 0x0C, 0x03, 0x00, 0xC0, 0x37, 0xE3, 0xF8, 0xFC, 0xFE,
  0xE3, 0x61, 0xBF, 0xEF, 0xF0, 0x00, 0x0E, 0x0F, 0x8C, 0x6C, 0x19, 0xF1,
  0xFD, 0x87, 0xFF, 0xFF, 0xF0, 0x0F, 0xF3, 0xF0, 0x00, 0x00, 0x0C, 0x0C,
  0x0C, 0x0C, 0x01, 0xF1, 0xFD, 0x87, 0xFF, 0xFF, 0xF0, 0x0F, 0xF3, 0xF0,
  0x00, 0x00, 0x06, 0x01, 0x80, 0x60, 0x19, 0xF1, 0xFD, 0x87, 0xFF, 0xFF,
  0xF0, 0x0F, 0xF3, 0xF0, 0x00
};

const GFXglyph FreeMonoBold9pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,  11,    0,    1 },   // 0x20 ' '
  {     0,   3,  11,  11,    4,  -10 },   // 0x21 '!'
  {     5,   7,   5,  11,    2,  -10 },   // 0x22 '"'
  {    10,   9,  12,  11,    1,  -11 },   // 0x23 '#'
  {    24,   9,  13,  11,    1,  -12 },   // 0x24 '$'
  {    40,   7,  11,  11,    2,  -10 },   // 0x25 '%'
  {    50,   8,  10,  11,    1,   -9 },   // 0x26 '&'
  {    60,   3,   5,  11,    4,  -10 },   // 0x27 '''
  {    62,   4,  14,  11,    5,  -10 },   // 0x28 '('
  {    69,   4,  14,  11,    2,  -10 },   // 0x29 ')'
  {    76,   9,  13,  11,    1,  -12 },   // 0x2A '*'
  {    92,   8,  14,  11,    1,   -8 },   // 0x2B '+'
  {   106,   3,   5,  11,    3,   -1 },   // 0x2C ','
  {   108,   9,   2,  11,    1,   -5 },   // 0x2D '-'
  {   111,   2,   2,  11,    4,   -1 },   // 0x2E '.'
  {   112,   7,  15,  11,    2,  -12 },   // 0x2F '/'
  {   126,   7,  12,  11,    2,  -11 },   // 0x30 '0'
  {   137,   7,  11,  11,    2,  -10 },   // 0x31 '1'
  {   147,   8,  12,  11,    1,  -11 },   // 0x32 '2'
  {   159,   8,  12,  11,    2,  -11 },   // 0x33 '3'
  {   171,   7,  10,  11,    2,   -9 },   // 0x34 '4'
  {   180,   9,  11,  11,    1,  -10 },   // 0x35 '5'
  {   193,   8,  12,  11,    2,  -11 },   // 0x36 '6'
  {   205,   8,  11,  11,    1,  -10 },   // 0x37 '7'
  {   216,   7,  12,  11,    2,  -11 },   // 0x38 '8'
  {   227,   8,  12,  11,    2,  -11 },   // 0x39 '9'
  {   239,   2,   8,  11,    4,   -7 },   // 0x3A ':'
  {   241,   3,  11,  11,    3,   -7 },   // 0x3B ';'
  {   246,   8,  13,  11,    2,  -12 },   // 0x3C '<'
  {   259,   9,  13,  11,    1,  -12 },   // 0x3D '='
  {   275,   9,  13,  11,    1,  -12 },   // 0x3E '>'
  {   291,   8,  11,  11,    2,  -10 },   // 0x3F '?'
  {   302,   9,  15,  11,    1,  -11 },   // 0x40 '@'
  {   319,  11,  11,  11,    0,  -10 },   // 0x41 'A'
  {   335,  10,  11,  11,    1,  -10 },   // 0x42 'B'
  {   349,   9,  11,  11,    1,  -10 },   // 0x43 'C'
  {   362,  10,  11,  11,    0,  -10 },   // 0x44 'D'
  {   376,   9,  11,  11,    1,  -10 },   // 0x45 'E'
  {   389,   9,  11,  11,    1,  -10 },   // 0x46 'F'
  {   402,  10,  11,  11,    1,  -10 },   // 0x47 'G'
  {   416,   9,  11,  11,    1,  -10 },   // 0x48 'H'
  {   429,   6,  11,  11,    3,  -10 },   // 0x49 'I'
  {   438,  10,  11,  11,    1,  -10 },   // 0x4A 'J'
  {   452,  10,  11,  11,    1,  -10 },   // 0x4B 'K'
  {   466,   9,  11,  11,    1,  -10 },   // 0x4C 'L'
  {   479,  11,  11,  11,    0,  -10 },   // 0x4D 'M'
  {   495,  11,  11,  11,    0,  -10 },   // 0x4E 'N'
  {   511,  11,  11,  11,    0,  -10 },   // 0x4F 'O'
  {   527,   9,  11,  11,    1,  -10 },   // 0x50 'P'
  {   540,  11,  14,  11,    0,  -10 },   // 0x51 'Q'
  {   560,   9,  11,  11,    1,  -10 },   // 0x52 'R'
  {   573,   9,  11,  11,    1,  -10 },   // 0x53 'S'
  {   586,   9,  11,  11,    1,  -10 },   // 0x54 'T'
  {   599,  11,  11,  11,    0,  -10 },   // 0x55 'U'
  {   615,  11,  11,  11,    0,  -10 },   // 0x56 'V'
  {   631,  10,  11,  11,    0,  -10 },   // 0x57 'W'
  {   645,  10,  11,  11,    0,  -10 },   // 0x58 'X'
  {   659,  10,  11,  11,    0,  -10 },   // 0x59 'Y'
  {   673,   8,  11,  11,    2,  -10 },   // 0x5A 'Z'
  {   684,   4,  14,  11,    5,  -10 },   // 0x5B '['
  {   691,   9,  13,  11,    1,  -12 },   // 0x5C '\'
  {   707,   4,  14,  11,    2,  -10 },   // 0x5D ']'
  {   714,  11,  13,  11,    0,  -12 },   // 0x5E '^'
  {   733,  11,  13,  11,    0,  -12 },   // 0x5F '_'
  {   752,   3,   3,  11,    3,  -11 },   // 0x60 '`'
  {   754,   9,   8,  11,    1,   -7 },   // 0x61 'a'
  {   763,  10,  11,  11,    0,  -10 },   // 0x62 'b'
  {   777,   9,   8,  11,    1,   -7 },   // 0x63 'c'
  {   786,  10,  11,  11,    1,  -10 },   // 0x64 'd'
  {   800,   9,   8,  11,    1,   -7 },   // 0x65 'e'
  {   809,   8,  11,  11,    2,  -10 },   // 0x66 'f'
  {   820,   9,  12,  11,    1,   -7 },   // 0x67 'g'
  {   834,   9,  11,  11,    1,  -10 },   // 0x68 'h'
  {   847,   8,  11,  11,    2,  -10 },   // 0x69 'i'
  {   858,   6,  15,  11,    2,  -10 },   // 0x6A 'j'
  {   870,   9,  11,  11,    1,  -10 },   // 0x6B 'k'
  {   883,   8,  11,  11,    2,  -10 },   // 0x6C 'l'
  {   894,  11,   8,  11,    0,   -7 },   // 0x6D 'm'
  {   905,   9,   8,  11,    1,   -7 },   // 0x6E 'n'
  {   914,   9,   8,  11,    1,   -7 },   // 0x6F 'o'
  {   923,  11,  12,  11,    0,   -7 },   // 0x70 'p'
  {   940,  11,  12,  11,    0,   -7 },   // 0x71 'q'
  {   957,   9,   8,  11,    1,   -7 },   // 0x72 'r'
  {   966,   8,   8,  11,    2,   -7 },   // 0x73 's'
  {   974,   8,  11,  11,    1,  -10 },   // 0x74 't'
  {   985,   9,   8,  11,    1,   -7 },   // 0x75 'u'
  {   994,  11,   8,  11,    0,   -7 },   // 0x76 'v'
  {  1005,  11,   8,  11,    0,   -7 },   // 0x77 'w'
  {  1016,   9,   8,  11,    1,   -7 },   // 0x78 'x'
  {  1025,  10,  12,  11,    0,   -7 },   // 0x79 'y'
  {  1040,   7,   8,  11,    2,   -7 },   // 0x7A 'z'
  {  1047,   9,  12,  11,    1,  -11 },   // 0x7B '{'
  {  1061,   9,  13,  11,    1,  -12 },   // 0x7C '|'
  {  1077,   9,  13,  11,    1,  -12 },   // 0x7D '}'
  {  1093,   9,  13,  11,    1,  -12 }    // 0x7E '~'
};

const GFXfont FreeMonoBold9pt7b PROGMEM = {(uint8_t *)FreeMonoBold9pt7bBitmaps,
                                           (GFXglyph *)FreeMonoBold9pt7bGlyphs, 0x20, 0x7E,      18};
